{
  "info": {
    "title": "Honey Backend",
    "version": "0.0.1",
    "description": "Honey Backend",
    "x-logo": {
      "url": "../docs/honey.png"
    }
  },
  "host": "baseUrl",
  "schemes": [
    "https"
  ],
  "basePath": "/app",
  "securityDefinitions": {
    "Auth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization"
    }
  },
  "x-tagGroups": [
    {
      "name": "ai service",
      "tags": [
        "admins",
        "auth",
        "categories",
        "products",
        "users",
        "carts",
        "payment",
        "properties",
        "order"
      ]
    }
  ],
  "swagger": "2.0",
  "paths": {
    "/admins": {
      "post": {
        "description": "create one admin",
        "summary": "create admins",
        "tags": [
          "admins"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrl/admins' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwa...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"firstName\": \"al\",\n    \"lastName\": \"abdi\",\n    \"phoneNumber\": \"09394552776\",\n    \"passwordConfirm\": \"!QAZ1qaz\",\n    \"password\": \"!QAZ1qaz\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrl/admins',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwa...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"firstName\": \"al\",\n    \"lastName\": \"abdi\",\n    \"phoneNumber\": \"09394552776\",\n    \"passwordConfirm\": \"!QAZ1qaz\",\n    \"password\": \"!QAZ1qaz\"\n  })\n\n  };\n  request(options, function (error, response) {\n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "lastName",
                  "firstName",
                  "phoneNumber",
                  "password",
                  "passwordConfirm"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "علی"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "عبدی"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "09394552776"
                  },
                  "password": {
                    "type": "string",
                    "description": "password must be 8 character or more and strong pass(contain number letter, ...)",
                    "example": "!QAZ1qaz"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "example": "!QAZ1qaz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "_id": "63e571e83e46dfa3902bedc3",
                        "firstName": "علی",
                        "lastName": "عبدی",
                        "phoneNumber": "+989394552776",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "نام خانوادگی باید به صورت حروف وارد شود",
                        "نام نمی تواند خالی باشد",
                        "شماره موبایل در سیستم وجود دارد"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "get all admins list",
        "summary": "get admins",
        "tags": [
          "admins"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/admins' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bW....'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/admins',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bW....'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "phoneNumber": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "number"
                          }
                        },
                        "example": {
                          "_id": "63e571e83e46dfa3902bedc3",
                          "firstName": "al",
                          "lastName": "abdi",
                          "phoneNumber": "+989394552776",
                          "__v": 0
                        }
                      },
                      "example": [
                        {
                          "_id": "63e571e83e46dfa3902bedc3",
                          "firstName": "ali",
                          "lastName": "abdi",
                          "phoneNumber": "+989394552776",
                          "__v": 0
                        },
                        {
                          "_id": "63e573a0295e4222cf307fe4",
                          "firstName": "mohammd",
                          "lastName": "abdi",
                          "phoneNumber": "+989394552775",
                          "__v": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins/:id": {
      "delete": {
        "description": "Delete one admin",
        "summary": "Delete admins",
        "tags": [
          "admins"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request DELETE 'http://baseUrl/admins/63e571e83e46dfa3902bedc3' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'DELETE',\n  'url': 'http://baseUrl/admins/63e571e83e46dfa3902bedc3',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "admin id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "_id": "63e571e83e46dfa3902bedc3",
                        "firstName": "al",
                        "lastName": "abdi",
                        "phoneNumber": "+989394552776",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Delete /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "update one admin",
        "summary": "update admins",
        "tags": [
          "admins"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/admins/63e571e83e46dfa3902bedc3' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"name\": \"ali\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/admins/63e571e83e46dfa3902bedc3',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"name\": \"ali\"\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "admin id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "علی"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "علی"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "_id": "63e571e83e46dfa3902bedc3",
                        "firstName": "al",
                        "lastName": "abdi",
                        "phoneNumber": "+989394552776",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth-admin/login": {
      "post": {
        "description": "Admin login",
        "summary": "Admin login",
        "tags": [
          "auth"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrlauth-admin/login' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"phoneNumber\": \"09360980928\",\n    \"password\": \"!QAZ1qaz\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrlauth-admin/login',\n  'headers': {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"phoneNumber\": \"09360980928\",\n    \"password\": \"!QAZ1qaz\"\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "phoneNumber",
                  "password"
                ],
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "example": "09394552776"
                  },
                  "password": {
                    "type": "string",
                    "example": "!QAZ1qaz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlc..."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "User login",
        "summary": "User login",
        "tags": [
          "auth"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrl/auth/login' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"phoneNumber\": \"09360980928\",\n    \"password\": \"!QAZ1qaz\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrl/auth/login',\n  'headers': {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"phoneNumber\": \"09360980928\",\n    \"password\": \"!QAZ1qaz\"\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "phoneNumber",
                  "password"
                ],
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "example": "09394552776"
                  },
                  "password": {
                    "type": "string",
                    "example": "!QAZ1qaz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlc..."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/products": {
      "post": {
        "description": "User add product to Cart",
        "summary": "User Cart",
        "tags": [
          "carts"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://lbaseUrl/carts/products' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1N...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"products\": [\n        {\n            \"quantity\": 10,\n            \"_id\": \"64704cd2b24eac4599451066\"\n        }\n    ]\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://lbaseUrl/carts/products',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1N...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"products\": [\n      {\n        \"quantity\": 10,\n        \"_id\": \"64704cd2b24eac4599451066\"\n      }\n    ]\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "quantity",
                    "_id"
                  ],
                  "properties": {
                    "quantity": {
                      "type": "intiger",
                      "example": 20
                    },
                    "_id": {
                      "type": "string",
                      "example": "6468b16b801b654457284967"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/products/:id": {
      "delete": {
        "description": "User delete product from cart",
        "summary": "User delete cart",
        "tags": [
          "carts"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request DELETE 'http://baseUrl/carts/products/64704cd2b24eac4599451066' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'DELETE',\n  'url': 'http://baseUrl/carts/products/64704cd2b24eac4599451066',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiI...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "User update cart",
        "summary": "User update cart",
        "tags": [
          "carts"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://lbaseUrl/carts/products/64704cd2b24eac4599451066' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiI...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"product\": {\n        \"quantity\": 65\n    }\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://lbaseUrl/carts/products/64704cd2b24eac4599451066',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiI...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"product\": {\n      \"quantity\": 65\n    }\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "intiger",
                    "example": 20
                  },
                  "_id": {
                    "type": "string",
                    "example": "6468b16b801b654457284967"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "type": "obejct",
                            "properties": {
                              "quantity": {
                                "type": "intiger"
                              },
                              "product": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "intiger"
                        }
                      },
                      "example": {
                        "_id": "648b01eaa1aeb17a2a89d64f",
                        "user": "64724cba6666c49e972a846c",
                        "__v": 0,
                        "createdAt": "2023-06-15T12:19:54.642Z",
                        "products": [
                          {
                            "quantity": 65,
                            "product": "64704cd2b24eac4599451066"
                          }
                        ],
                        "updatedAt": "2023-06-20T06:39:08.831Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "get": {
        "description": "Get User self cart",
        "summary": "Get cart",
        "tags": [
          "carts"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/carts' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/carts',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "quantity": {
                                "type": "intiger"
                              },
                              "product": {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "category": {
                                    "type": "string"
                                  },
                                  "price": {
                                    "type": "string"
                                  },
                                  "discount": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "productImagesSrc": {
                                    "type": "array"
                                  },
                                  "additionalsImageSrc": {
                                    "type": "array"
                                  },
                                  "customProperty": {
                                    "type": "array"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "__v": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "_id": "649151415254f59e203ea131",
                      "user": "64724cba6666c49e972a846c",
                      "__v": 0,
                      "createdAt": "2023-06-20T07:12:01.383Z",
                      "products": [
                        {
                          "quantity": 10,
                          "product": {
                            "_id": "64704cd2b24eac4599451066",
                            "name": "عسل کوهی",
                            "price": 600000,
                            "quantity": 881,
                            "description": "عَسَل یا اَنگَبین (همچنین «انگُبین» و «اَنگُوین»[۱])، مایعی شیرین و گران‌رو است که توسط زنبورعسل و برخی حشرات دیگر نیز تولید می‌شود.[۲] زنبورها، عسل را از تراوش شکری گیاهان و گل‌ها (شهد گل‌ها) یا تراوش‌های برخی دیگر (مانند عسلک) از راه بالاآوری، فعالیت آنزیمی و بخار آب فرآوری می‌کنند. زنبورها عسل را در ساختارهایی از جنس موم به نام کندو اندوخته می‌کنند.[۲][۳][۴] عسل از کلونی‌های زنبورهای عسل وحشی یا از کندوهای زنبورهای پرورشی گردآوری می‌شود، که به این کار زنبورداری گفته می‌شود.\r\n\r\n",
                            "code": "w90zxak8be",
                            "category": "646fa78d8bfe8d1617ab556b",
                            "discount": 49000,
                            "productImagesSrc": [
                              "http://baseUrl/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg"
                            ],
                            "additionalsImageSrc": [
                              "http://baseUrl/upload/product/d4b290d6-2a06-4952-8b00-3ebb6bbbd640.jpeg",
                              "http://baseUrl/upload/product/6a1fb890-928c-4110-af73-6a430fe9fca4.jpeg",
                              "http://baseUrl/upload/product/734a1222-1692-4551-82be-06bfc952245c.jpeg",
                              "http://baseUrl/upload/product/be93b3dc-707b-4179-9e86-9b15641ab67b.jpeg"
                            ],
                            "customProperty": [
                              {
                                "value": "http://baseUrl/upload/product/bff53df6-7e5d-4846-8b1c-0c795b3af24f.jpeg",
                                "label": "آزمایش",
                                "type": "file"
                              },
                              {
                                "value": "600",
                                "label": "پرولین",
                                "type": "number"
                              },
                              {
                                "value": "6",
                                "label": "ساکارز",
                                "type": "number",
                                "unit": "درصد"
                              },
                              {
                                "value": "1000",
                                "label": "وزن",
                                "type": "text",
                                "unit": "گرم"
                              }
                            ],
                            "createdAt": "2023-05-26T06:08:18.544Z",
                            "updatedAt": "2023-06-10T21:07:45.962Z",
                            "__v": 0,
                            "deletedAt": false
                          }
                        }
                      ],
                      "updatedAt": "2023-06-20T07:12:01.383Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "description": "Admin create new categgory",
        "summary": "create category",
        "tags": [
          "categories"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrl/categories' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"name\": \"checl\",\n    \"description\": \"this is book category\",\n    \"properties\": [\"6468b16b801b654457284967\"]\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrl/categories',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"name\": \"checl\",\n    \"description\": \"this is book category\",\n    \"properties\": [\n      \"6468b16b801b654457284967\"\n    ]\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "لوازم زنبور داری"
                  },
                  "description": {
                    "type": "string",
                    "example": "وسایل مورد نیاز در زنبورداری بسیار متنوع می باشند که بسته به مرحله زنبورداری متفاوت است."
                  },
                  "properties": {
                    "type": "array",
                    "description": "list property for category",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "6468b16b801b654457284967"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "properties": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "book",
                        "description": "this is book category",
                        "properties": [
                          "6468b16b801b654457284967"
                        ],
                        "_id": "64904fa356a4782b667dccad",
                        "createdAt": "2023-06-19T12:52:51.023Z",
                        "updatedAt": "2023-06-19T12:52:51.023Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "نام باید به صورت حروف وارد شود",
                        "نام نباید بیشتر از 50 حرف باشد",
                        "نام نباید کمتر از 3 حرف باشد"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "get all categories",
        "summary": "get categories",
        "tags": [
          "categories"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/categories'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/categories',\n  'headers': {\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "__id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "properties": {
                            "type": "array"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "number"
                          }
                        }
                      },
                      "example": [
                        {
                          "_id": "646fa78d8bfe8d1617ab556b",
                          "name": "عسل",
                          "description": "مطابق استاندارد بین المللی که در ایران هم پذیرفته شده است، میزان پرولین در عسل طبیعی نباید کمتر از ۱۸۰ میلی‌گرم درکیلوگرم باشد. مقادیر کمتر از این مقدار نشان دهنده‌ای این است که تغذیه زنبور طبیعی نبوده است. و هر چه این مقدار بیشتر باشد نشان از کیفیت بالای عسل دارد.\n\n",
                          "properties": [
                            {
                              "_id": "646fa6858bfe8d1617ab555b",
                              "label": "ساکارز",
                              "type": "number",
                              "unit": [
                                "درصد"
                              ],
                              "category": [],
                              "createdAt": "2023-05-25T18:18:45.452Z",
                              "updatedAt": "2023-05-25T18:18:45.452Z",
                              "__v": 0
                            },
                            {
                              "_id": "646fa74c8bfe8d1617ab555f",
                              "label": "پرولین",
                              "type": "number",
                              "unit": [],
                              "category": [],
                              "createdAt": "2023-05-25T18:22:04.761Z",
                              "updatedAt": "2023-05-25T18:22:04.761Z",
                              "__v": 0
                            },
                            {
                              "_id": "646fa75c8bfe8d1617ab5563",
                              "label": "آزمایش",
                              "type": "file",
                              "unit": [],
                              "category": [],
                              "createdAt": "2023-05-25T18:22:20.656Z",
                              "updatedAt": "2023-05-25T18:22:20.656Z",
                              "__v": 0
                            },
                            {
                              "_id": "6489fb654925b5509cb01d2b",
                              "label": "وزن",
                              "type": "text",
                              "unit": [
                                "کیلو",
                                "گرم"
                              ],
                              "category": [],
                              "createdAt": "2023-06-14T17:39:49.464Z",
                              "updatedAt": "2023-06-14T17:39:49.464Z",
                              "__v": 0
                            }
                          ],
                          "createdAt": "2023-05-25T18:23:09.808Z",
                          "updatedAt": "2023-06-14T22:31:12.095Z",
                          "__v": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/:id": {
      "get": {
        "description": "Admin get one category",
        "summary": "Get one category",
        "tags": [
          "categories"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/categories/646fa78d8bfe8d1617ab556b' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXV...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/categories/646fa78d8bfe8d1617ab556b',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXV...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "__id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "properties": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "_id": "646fa78d8bfe8d1617ab556b",
                        "name": "عسل",
                        "description": "مطابق استاندارد بین المللی که در ایران هم پذیرفته شده است، میزان پرولین در عسل طبیعی نباید کمتر از ۱۸۰ میلی‌گرم درکیلوگرم باشد. مقادیر کمتر از این مقدار نشان دهنده‌ای این است که تغذیه زنبور طبیعی نبوده است. و هر چه این مقدار بیشتر باشد نشان از کیفیت بالای عسل دارد.\n\n",
                        "properties": [
                          {
                            "_id": "646fa6858bfe8d1617ab555b",
                            "label": "ساکارز",
                            "type": "number",
                            "unit": [
                              "درصد"
                            ],
                            "category": [],
                            "createdAt": "2023-05-25T18:18:45.452Z",
                            "updatedAt": "2023-05-25T18:18:45.452Z",
                            "__v": 0
                          },
                          {
                            "_id": "646fa74c8bfe8d1617ab555f",
                            "label": "پرولین",
                            "type": "number",
                            "unit": [],
                            "category": [],
                            "createdAt": "2023-05-25T18:22:04.761Z",
                            "updatedAt": "2023-05-25T18:22:04.761Z",
                            "__v": 0
                          },
                          {
                            "_id": "646fa75c8bfe8d1617ab5563",
                            "label": "آزمایش",
                            "type": "file",
                            "unit": [],
                            "category": [],
                            "createdAt": "2023-05-25T18:22:20.656Z",
                            "updatedAt": "2023-05-25T18:22:20.656Z",
                            "__v": 0
                          },
                          {
                            "_id": "6489fb654925b5509cb01d2b",
                            "label": "وزن",
                            "type": "text",
                            "unit": [
                              "کیلو",
                              "گرم"
                            ],
                            "category": [],
                            "createdAt": "2023-06-14T17:39:49.464Z",
                            "updatedAt": "2023-06-14T17:39:49.464Z",
                            "__v": 0
                          }
                        ],
                        "createdAt": "2023-05-25T18:23:09.808Z",
                        "updatedAt": "2023-06-14T22:31:12.095Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Admin update one categgory",
        "summary": "update category",
        "tags": [
          "categories"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/categories/646fa78d8bfe8d1617ab556b' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9........' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"name\": \"عسل\",\n    \"createdAt\": \"2024-01-25T07:41:10.921Z\",\n    \"__v\": 2\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/categories/646fa78d8bfe8d1617ab556b',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9........',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"name\": \"عسل\",\n    \"createdAt\": \"2024-01-25T07:41:10.921Z\",\n    \"__v\": 2\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "category id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "لوازم زنبور داری"
                  },
                  "description": {
                    "type": "string",
                    "example": "وسایل مورد نیاز در زنبورداری بسیار متنوع می باشند که بسته به مرحله زنبورداری متفاوت است."
                  },
                  "properties": {
                    "type": "array",
                    "description": "list property for category",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "6468b16b801b654457284967"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "properties": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "_id": "64904fa356a4782b667dccad",
                        "name": "book",
                        "description": "this is book category",
                        "properties": [
                          "6468b16b801b654457284967"
                        ],
                        "createdAt": "2023-06-19T12:52:51.023Z",
                        "updatedAt": "2023-06-19T12:52:51.023Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "نام در سیستم وجود دارد"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/orders": {
      "get": {
        "description": "User get all orders",
        "summary": "User order",
        "tags": [
          "order"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://localhost:3000/user/orders' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Iis5ODkzOTQ1NTI3NzYiLCJzdWIiOiI2NDcyNGNiYTY2NjZjNDllOTcyYTg0NmMiLCJyb2xlcyI6WyJ1c2VyIl0sImlhdCI6MTY4NzE3ODU0NSwiZXhwIjoxNjg3NDM3NzQ1fQ.P4V0OyuzSu9B7-HkZoIsEtJqWqduOpcf4wxVTXowqUU'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://localhost:3000/user/orders',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Iis5ODkzOTQ1NTI3NzYiLCJzdWIiOiI2NDcyNGNiYTY2NjZjNDllOTcyYTg0NmMiLCJyb2xlcyI6WyJ1c2VyIl0sImlhdCI6MTY4NzE3ODU0NSwiZXhwIjoxNjg3NDM3NzQ1fQ.P4V0OyuzSu9B7-HkZoIsEtJqWqduOpcf4wxVTXowqUU'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "number"
                          },
                          "user": {
                            "type": "string"
                          },
                          "cart": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "product": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "imageSrc": {
                                  "type": "string"
                                },
                                "price": {
                                  "type": "intiger"
                                },
                                "discount": {
                                  "type": "intiger"
                                },
                                "quantity": {
                                  "type": "intiger"
                                }
                              }
                            }
                          },
                          "amount": {
                            "type": "intiger"
                          },
                          "status": {
                            "type": "number"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "link": {
                                "type": "string"
                              },
                              "cardNo": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              },
                              "hashedCardNo": {
                                "type": "string"
                              },
                              "status": {
                                "type": "intiger"
                              },
                              "trackId": {
                                "type": "intiger"
                              },
                              "transactionAmount": {
                                "type": "intiger"
                              },
                              "transactionDate": {
                                "type": "string"
                              },
                              "paymentAmount": {
                                "type": "intiger"
                              },
                              "paymentDate": {
                                "type": "string"
                              },
                              "paymentTrackId": {
                                "type": "intiger"
                              },
                              "verifyDate": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "_id": "6480390bd4a06ddbcb93123c",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 3
                            },
                            {
                              "product": "64803778cee36139e6931c9f",
                              "name": "عسل کوهی",
                              "code": "sicdiu",
                              "imageSrc": "http://localhost:3000/upload/product/5fde8d55-a119-4d09-bedf-d988f7b447e9.jpeg",
                              "price": 5000,
                              "discount": 255,
                              "quantity": 2
                            }
                          ],
                          "amount": 1662490,
                          "status": 5,
                          "createdAt": "2023-06-07T08:00:11.990Z",
                          "updatedAt": "2023-06-09T12:03:38.262Z",
                          "__v": 0,
                          "transaction": {
                            "id": "6825153c41a0791eb027391a3d687099",
                            "link": "https://idpay.ir/p/ws-sandbox/6825153c41a0791eb027391a3d687099",
                            "cardNo": "123456******1234",
                            "error": null,
                            "hashedCardNo": "E59FA6241C94B8836E3D03120DF33E80FD988888BBA0A122240C2E7D23B48295",
                            "status": 100,
                            "trackId": 1222187,
                            "transactionAmount": 16624900,
                            "transactionDate": "1970-01-20T12:22:04.812Z",
                            "paymentAmount": 16624900,
                            "paymentDate": "1970-01-20T12:22:04.812Z",
                            "paymentTrackId": "74238904",
                            "verifyDate": "1970-01-20T12:22:04.819Z"
                          }
                        },
                        {
                          "_id": "6480392cd4a06ddbcb931299",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "6471fc4d308b2b0742331ef2",
                              "name": "do",
                              "code": "p0jfjzauxq",
                              "imageSrc": "http://localhost:3000/upload/product/bb4a789a-98ed-4dc5-b0f6-bbe65c29e88b.jpg",
                              "price": 1,
                              "discount": 0,
                              "quantity": 6
                            },
                            {
                              "product": "64803778cee36139e6931c9f",
                              "name": "عسل کوهی",
                              "code": "sicdiu",
                              "imageSrc": "http://localhost:3000/upload/product/5fde8d55-a119-4d09-bedf-d988f7b447e9.jpeg",
                              "price": 5000,
                              "discount": 255,
                              "quantity": 3
                            }
                          ],
                          "amount": 14241,
                          "status": 2,
                          "createdAt": "2023-06-07T08:00:44.336Z",
                          "updatedAt": "2023-06-07T08:00:55.370Z",
                          "__v": 0,
                          "transaction": {
                            "id": "7ed20629d50b2f473c432c4f18a973cb",
                            "link": "https://idpay.ir/p/ws-sandbox/7ed20629d50b2f473c432c4f18a973cb",
                            "cardNo": "123456******1234",
                            "error": null,
                            "hashedCardNo": "E59FA6241C94B8836E3D03120DF33E80FD988888BBA0A122240C2E7D23B48295",
                            "status": 1,
                            "trackId": 1222190,
                            "transactionAmount": 142410,
                            "transactionDate": "1970-01-20T12:22:04.844Z"
                          }
                        },
                        {
                          "_id": "64803951d4a06ddbcb93130f",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 3
                            },
                            {
                              "product": "6471b896f3173f143a7c59b9",
                              "name": "tt",
                              "code": "bqlk0vwksa",
                              "imageSrc": "http://localhost:3000/upload/product/cd1d647a-64f8-42e3-aeaa-4d1a6066cad3.png",
                              "price": 25,
                              "discount": 0,
                              "quantity": 9
                            }
                          ],
                          "amount": 1653225,
                          "status": 1,
                          "createdAt": "2023-06-07T08:01:21.183Z",
                          "updatedAt": "2023-06-16T12:09:44.585Z",
                          "__v": 0,
                          "transaction": {
                            "id": "39ffbc3555b7f1a601c1676b5ab565cd",
                            "link": "https://idpay.ir/p/ws-sandbox/39ffbc3555b7f1a601c1676b5ab565cd",
                            "cardNo": "123456******1234",
                            "error": null,
                            "hashedCardNo": "E59FA6241C94B8836E3D03120DF33E80FD988888BBA0A122240C2E7D23B48295",
                            "status": 100,
                            "trackId": 1222193,
                            "transactionAmount": 16532250,
                            "transactionDate": "1970-01-20T12:22:04.881Z",
                            "paymentAmount": 16532250,
                            "paymentDate": "1970-01-20T12:22:04.881Z",
                            "paymentTrackId": "94416325",
                            "verifyDate": "1970-01-20T12:22:04.886Z"
                          }
                        },
                        {
                          "_id": "648317b9ccb783f358a5c6f9",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 1
                            }
                          ],
                          "amount": 551000,
                          "status": 0,
                          "createdAt": "2023-06-09T12:14:49.130Z",
                          "updatedAt": "2023-06-09T12:14:49.130Z",
                          "__v": 0
                        },
                        {
                          "_id": "6483397ad32b0462950f7b10",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 1
                            }
                          ],
                          "amount": 551000,
                          "status": 2,
                          "createdAt": "2023-06-09T14:38:50.833Z",
                          "updatedAt": "2023-06-09T14:39:17.695Z",
                          "__v": 0,
                          "transaction": {
                            "id": "2e9482d42e8089c3859f3cf9bc396038",
                            "link": "https://idpay.ir/p/ws-sandbox/2e9482d42e8089c3859f3cf9bc396038",
                            "cardNo": "123456******1234",
                            "error": null,
                            "hashedCardNo": "E59FA6241C94B8836E3D03120DF33E80FD988888BBA0A122240C2E7D23B48295",
                            "status": 6,
                            "trackId": 1223468,
                            "transactionAmount": 5510000,
                            "transactionDate": "1970-01-20T12:25:21.531Z"
                          }
                        },
                        {
                          "_id": "6484aa9e619fb32f1c5b1532",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 5
                            },
                            {
                              "product": "6484a921619fb32f1c5b1487",
                              "name": "do",
                              "code": "gvok7uj",
                              "imageSrc": "http://localhost:3000/upload/product/3b6fb2fe-4854-4e3e-a5a4-70347da5880d.png",
                              "price": 5520,
                              "discount": 0,
                              "quantity": 2
                            }
                          ],
                          "amount": 2766040,
                          "status": 2,
                          "createdAt": "2023-06-10T16:53:50.074Z",
                          "updatedAt": "2023-06-16T12:09:16.453Z",
                          "__v": 0,
                          "transaction": {
                            "id": "5bc613fe14e442de85c63044695089b0",
                            "link": "https://idpay.ir/p/ws-sandbox/5bc613fe14e442de85c63044695089b0",
                            "cardNo": "123456******1234",
                            "error": null,
                            "hashedCardNo": "E59FA6241C94B8836E3D03120DF33E80FD988888BBA0A122240C2E7D23B48295",
                            "status": 100,
                            "trackId": 1224452,
                            "transactionAmount": 27660400,
                            "transactionDate": "1970-01-20T12:26:56.030Z",
                            "paymentAmount": 27660400,
                            "paymentDate": "1970-01-20T12:26:56.030Z",
                            "paymentTrackId": "52960892",
                            "verifyDate": "1970-01-20T12:26:56.042Z"
                          }
                        },
                        {
                          "_id": "6484ad05619fb32f1c5b158a",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 4
                            }
                          ],
                          "amount": 2204000,
                          "status": 2,
                          "createdAt": "2023-06-10T17:04:05.163Z",
                          "updatedAt": "2023-06-10T17:04:14.615Z",
                          "__v": 0,
                          "transaction": {
                            "id": "cf09c631a844aa82fc675a7e4271ae4b",
                            "link": "https://idpay.ir/p/ws-sandbox/cf09c631a844aa82fc675a7e4271ae4b",
                            "cardNo": "123456******1234",
                            "error": null,
                            "hashedCardNo": "E59FA6241C94B8836E3D03120DF33E80FD988888BBA0A122240C2E7D23B48295",
                            "status": 7,
                            "trackId": 1224458,
                            "transactionAmount": 22040000,
                            "transactionDate": "1970-01-20T12:26:56.645Z"
                          }
                        },
                        {
                          "_id": "6491599832a7b941c01e4678",
                          "user": "64724cba6666c49e972a846c",
                          "cart": [
                            {
                              "product": "64704cd2b24eac4599451066",
                              "name": "عسل کوهی",
                              "code": "w90zxak8be",
                              "imageSrc": "http://localhost:3000/upload/product/1cfd4636-876c-469f-89fc-c14e42d5429e.jpeg",
                              "price": 600000,
                              "discount": 49000,
                              "quantity": 10
                            }
                          ],
                          "amount": 5510000,
                          "status": 0,
                          "createdAt": "2023-06-20T07:47:36.421Z",
                          "updatedAt": "2023-06-20T07:47:37.573Z",
                          "__v": 0,
                          "transaction": {
                            "id": "58c4166141563d84363678e011043e69",
                            "link": "https://idpay.ir/p/ws-sandbox/58c4166141563d84363678e011043e69"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkout/payment": {
      "get": {
        "description": "User get link for payment",
        "summary": "Payemnt",
        "tags": [
          "payment"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://lbaseUrl/checkout/payment' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://lbaseUrl/checkout/payment',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transactionLink": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "transactionLink": "https://idpay.ir/p/ws-sandbox/58c4166141563d84363678e011043e69"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "آدرس گیرنده الزامی است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "description": "Admin create new products",
        "summary": "create products",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrl/products' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6...' \\\n--form 'name=\"ali\"' \\\n--form 'price=\"12255\"' \\\n--form 'discount=\"2212\"' \\\n--form 'quantity=\"222\"' \\\n--form 'category=\"6468fc1a51c4a34f8138d14a\"' \\\n--form 'customProperty[0][type]=\"file\"' \\\n--form 'customProperty[0][label]=\"do\"' \\\n--form 'customProperty[0][value]=\"image.jpg\"' \\\n--form 'product=@\"/home/ali/Downloads/image-removebg-preview.png\"' \\\n--form 'attach=@\"/home/ali/Downloads/image.jpg\"' \\\n--form 'attach=@\"/home/ali/Downloads/Clipboard - March 14, 2022 11_00 AM.png\"' \\\n--form 'attach=@\"/home/ali/Downloads/Clipboard - March 14, 2022 11_00 AM (1).png\"' \\\n--form 'additionals=@\"/home/ali/Downloads/IMG_20220111_155331.jpg\"' \\\n--form 'additionals=@\"/home/ali/Downloads/IMG_20211223_080715.jpg\"' \\\n--form 'customProperty[1][type]=\"string\"' \\\n--form 'customProperty[1][label]=\"labtop 457\"' \\\n--form 'customProperty[1][value]=\"585\"'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar fs = require('fs');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrl/products',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6...'\n  },\n  formData: {\n    'name': 'ali',\n    'price': '12255',\n    'discount': '2212',\n    'quantity': '222',\n    'category': '6468fc1a51c4a34f8138d14a',\n    'customProperty[0][type]': 'file',\n    'customProperty[0][label]': 'do',\n    'customProperty[0][value]': 'image.jpg',\n    'product': {\n      'value': fs.createReadStream('/home/ali/Downloads/image-removebg-preview.png'),\n      'options': {\n        'filename': 'image-removebg-preview.png',\n        'contentType': null\n      }\n    },\n    'attach': {\n      'value': fs.createReadStream('/home/ali/Downloads/image.jpg'),\n      'options': {\n        'filename': 'image.jpg',\n        'contentType': null\n      }\n    },\n    'attach': {\n      'value': fs.createReadStream('/home/ali/Downloads/Clipboard - March 14, 2022 11_00 AM.png'),\n      'options': {\n        'filename': 'Clipboard - March 14, 2022 11_00 AM.png',\n        'contentType': null\n      }\n    },\n    'attach': {\n      'value': fs.createReadStream('/home/ali/Downloads/Clipboard - March 14, 2022 11_00 AM (1).png'),\n      'options': {\n        'filename': 'Clipboard - March 14, 2022 11_00 AM (1).png',\n        'contentType': null\n      }\n    },\n    'additionals': {\n      'value': fs.createReadStream('/home/ali/Downloads/IMG_20220111_155331.jpg'),\n      'options': {\n        'filename': 'IMG_20220111_155331.jpg',\n        'contentType': null\n      }\n    },\n    'additionals': {\n      'value': fs.createReadStream('/home/ali/Downloads/IMG_20211223_080715.jpg'),\n      'options': {\n        'filename': 'IMG_20211223_080715.jpg',\n        'contentType': null\n      }\n    },\n    'customProperty[1][type]': 'string',\n    'customProperty[1][label]': 'labtop 457',\n    'customProperty[1][value]': '585'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "price",
                  "quantity",
                  "category",
                  "product"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "عسل طبیعی",
                    "description": "<div> product name </div>"
                  },
                  "description": {
                    "type": "string",
                    "description": "<div> product description </div>",
                    "example": "وسایل مورد نیاز در زنبورداری بسیار متنوع می باشند که بسته به مرحله زنبورداری متفاوت است."
                  },
                  "customProperty": {
                    "type": "array",
                    "description": "custom property for product",
                    "items": {
                      "type": "object",
                      "required": [
                        "label",
                        "type"
                      ],
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "<div> product label for add new custom property </div>",
                          "example": "وزن"
                        },
                        "value": {
                          "type": [
                            "string",
                            "integer"
                          ],
                          "description": "<div> product value for add new custom property </div>",
                          "example": 1000
                        },
                        "unit": {
                          "type": "string",
                          "description": "<div> unit for new property </div>",
                          "example": "کیلوگرم"
                        },
                        "type": {
                          "type": "string",
                          "description": "<div> if import type file shoud send file and fill value with file origin name </div>",
                          "enum": [
                            "file",
                            "text",
                            "number"
                          ],
                          "example": "file"
                        }
                      }
                    }
                  },
                  "price": {
                    "type": "integer",
                    "description": "<div> product price </div>",
                    "example": 1000
                  },
                  "discount": {
                    "type": "integer",
                    "description": "<div> product discount </div>",
                    "example": 200
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "<div> product quantity </div>",
                    "example": 5000
                  },
                  "category": {
                    "type": "string",
                    "description": "<div> product category </div>",
                    "example": "لوازم زنبور داری"
                  },
                  "product": {
                    "type": "file",
                    "example": "honey.jpg",
                    "description": "<div> product main images must be one file </div>"
                  },
                  "attach": {
                    "type": "file",
                    "example": "attach.jpg",
                    "description": "<div> if in custom property choose type file shoud send atach file maximum number 4 file </div>"
                  },
                  "additionals": {
                    "type": "file",
                    "example": "honey1.jpg",
                    "description": "<div> additionals image for product maximum number 4 file </div>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "productImagesSrc": {
                          "type": "array"
                        },
                        "additionalsImageSrc": {
                          "type": "array"
                        },
                        "customProperty": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "ali",
                        "price": 12255,
                        "quantity": 222,
                        "code": "d20pgbv",
                        "admin": "63ec02f7cf392f67c0ad6f0c",
                        "category": "6468fc1a51c4a34f8138d14a",
                        "discount": 2212,
                        "productImagesSrc": [
                          "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                        ],
                        "additionalsImageSrc": [
                          "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                          "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                        ],
                        "customProperty": [
                          {
                            "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                            "label": "آزمایش",
                            "type": "file"
                          },
                          {
                            "value": "8",
                            "label": "ساکارز",
                            "type": "number"
                          }
                        ],
                        "deletedAt": false,
                        "_id": "649070f8e3ab58f71dfa0a90",
                        "createdAt": "2023-06-19T15:15:04.923Z",
                        "updatedAt": "2023-06-19T15:15:04.923Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "نام باید به صورت حروف وارد شود"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all product",
        "summary": "Get All product",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/products'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/products',\n  'headers': {\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "filter product by category id",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort products by sort number",
            "required": false,
            "type": "intiger"
          },
          {
            "name": "deletedAt",
            "in": "query",
            "description": "filter product by deletedAt",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string"
                          },
                          "price": {
                            "type": "string"
                          },
                          "discount": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          },
                          "productImagesSrc": {
                            "type": "array"
                          },
                          "additionalsImageSrc": {
                            "type": "array"
                          },
                          "customProperty": {
                            "type": "array"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "number"
                          }
                        }
                      },
                      "example": [
                        {
                          "name": "ali",
                          "price": 12255,
                          "quantity": 222,
                          "code": "d20pgbv",
                          "admin": "63ec02f7cf392f67c0ad6f0c",
                          "category": "6468fc1a51c4a34f8138d14a",
                          "discount": 2212,
                          "productImagesSrc": [
                            "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                          ],
                          "additionalsImageSrc": [
                            "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                            "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                          ],
                          "customProperty": [
                            {
                              "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                              "label": "آزمایش",
                              "type": "file"
                            },
                            {
                              "value": "8",
                              "label": "ساکارز",
                              "type": "number"
                            }
                          ],
                          "deletedAt": false,
                          "_id": "649070f8e3ab58f71dfa0a90",
                          "createdAt": "2023-06-19T15:15:04.923Z",
                          "updatedAt": "2023-06-19T15:15:04.923Z",
                          "__v": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "مرتب سازی به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/:id": {
      "delete": {
        "description": "Delete one product by admin",
        "summary": "Delete one product",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl/"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request DELETE 'http://baseUrl/products/64907634e2058388fd97dadf' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'DELETE',\n  'url': 'http://baseUrl/products/64907634e2058388fd97dadf',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "productImagesSrc": {
                          "type": "array"
                        },
                        "additionalsImageSrc": {
                          "type": "array"
                        },
                        "customProperty": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "ali",
                        "price": 12255,
                        "quantity": 222,
                        "code": "d20pgbv",
                        "admin": "63ec02f7cf392f67c0ad6f0c",
                        "category": "6468fc1a51c4a34f8138d14a",
                        "discount": 2212,
                        "productImagesSrc": [
                          "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                        ],
                        "additionalsImageSrc": [
                          "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                          "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                        ],
                        "customProperty": [
                          {
                            "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                            "label": "آزمایش",
                            "type": "file"
                          },
                          {
                            "value": "8",
                            "label": "ساکارز",
                            "type": "number"
                          }
                        ],
                        "deletedAt": false,
                        "_id": "649070f8e3ab58f71dfa0a90",
                        "createdAt": "2023-06-19T15:15:04.923Z",
                        "updatedAt": "2023-06-19T15:15:04.923Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get one product",
        "summary": "Get one product",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/products/64704cd2b24eac4599451066'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/products/64704cd2b24eac4599451066',\n  'headers': {\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "productImagesSrc": {
                          "type": "array"
                        },
                        "additionalsImageSrc": {
                          "type": "array"
                        },
                        "customProperty": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "ali",
                        "price": 12255,
                        "quantity": 222,
                        "code": "d20pgbv",
                        "admin": "63ec02f7cf392f67c0ad6f0c",
                        "category": "6468fc1a51c4a34f8138d14a",
                        "discount": 2212,
                        "productImagesSrc": [
                          "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                        ],
                        "additionalsImageSrc": [
                          "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                          "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                        ],
                        "customProperty": [
                          {
                            "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                            "label": "آزمایش",
                            "type": "file"
                          },
                          {
                            "value": "8",
                            "label": "ساکارز",
                            "type": "number"
                          }
                        ],
                        "deletedAt": false,
                        "_id": "649070f8e3ab58f71dfa0a90",
                        "createdAt": "2023-06-19T15:15:04.923Z",
                        "updatedAt": "2023-06-19T15:15:04.923Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Admin update one products",
        "summary": "update products",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/products/649075bde2058388fd97dadb' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR...' \\\n--form 'quantity=\"10000\"'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/products/649075bde2058388fd97dadb',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR...'\n  },\n  formData: {\n    'quantity': '10000'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "عسل طبیعی",
                    "description": "<div> product name </div>"
                  },
                  "description": {
                    "type": "string",
                    "description": "<div> product description </div>",
                    "example": "وسایل مورد نیاز در زنبورداری بسیار متنوع می باشند که بسته به مرحله زنبورداری متفاوت است."
                  },
                  "customProperty": {
                    "type": "array",
                    "description": "custom property for product",
                    "items": {
                      "type": "object",
                      "required": [
                        "label",
                        "type"
                      ],
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "<div> product label for add new custom property </div>",
                          "example": "وزن"
                        },
                        "value": {
                          "type": [
                            "string",
                            "integer"
                          ],
                          "description": "<div> product value for add new custom property </div>",
                          "example": 1000
                        },
                        "unit": {
                          "type": "string",
                          "description": "<div> unit for new property </div>",
                          "example": "کیلوگرم"
                        },
                        "type": {
                          "type": "string",
                          "description": "<div> if import type file shoud send file and fill value with file origin name </div>",
                          "enum": [
                            "file",
                            "text",
                            "number"
                          ],
                          "example": "file"
                        }
                      }
                    }
                  },
                  "price": {
                    "type": "integer",
                    "description": "<div> product price </div>",
                    "example": 1000
                  },
                  "discount": {
                    "type": "integer",
                    "description": "<div> product discount </div>",
                    "example": 200
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "<div> product quantity </div>",
                    "example": 5000
                  },
                  "category": {
                    "type": "string",
                    "description": "<div> product category </div>",
                    "example": "لوازم زنبور داری"
                  },
                  "product": {
                    "type": "file",
                    "example": "honey.jpg",
                    "description": "<div> product main images must be one file </div>"
                  },
                  "attach": {
                    "type": "file",
                    "example": "attach.jpg",
                    "description": "<div> if in custom property choose type file shoud send atach file maximum number 4 file </div>"
                  },
                  "additionals": {
                    "type": "file",
                    "example": "honey1.jpg",
                    "description": "<div> additionals image for product maximum number 4 file </div>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "productImagesSrc": {
                          "type": "array"
                        },
                        "additionalsImageSrc": {
                          "type": "array"
                        },
                        "customProperty": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "ali",
                        "price": 12255,
                        "quantity": 222,
                        "code": "d20pgbv",
                        "admin": "63ec02f7cf392f67c0ad6f0c",
                        "category": "6468fc1a51c4a34f8138d14a",
                        "discount": 2212,
                        "productImagesSrc": [
                          "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                        ],
                        "additionalsImageSrc": [
                          "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                          "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                        ],
                        "customProperty": [
                          {
                            "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                            "label": "آزمایش",
                            "type": "file"
                          },
                          {
                            "value": "8",
                            "label": "ساکارز",
                            "type": "number"
                          }
                        ],
                        "deletedAt": false,
                        "_id": "649070f8e3ab58f71dfa0a90",
                        "createdAt": "2023-06-19T15:15:04.923Z",
                        "updatedAt": "2023-06-19T15:15:04.923Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "نام باید به صورت حروف وارد شود"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/:id/restore": {
      "get": {
        "description": "Safe delete one products",
        "summary": "Safe delete",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/products/64803778cee36139e6931c9f/restore' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/products/64803778cee36139e6931c9f/restore',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "productImagesSrc": {
                          "type": "array"
                        },
                        "additionalsImageSrc": {
                          "type": "array"
                        },
                        "customProperty": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "ali",
                        "price": 12255,
                        "quantity": 222,
                        "code": "d20pgbv",
                        "admin": "63ec02f7cf392f67c0ad6f0c",
                        "category": "6468fc1a51c4a34f8138d14a",
                        "discount": 2212,
                        "productImagesSrc": [
                          "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                        ],
                        "additionalsImageSrc": [
                          "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                          "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                        ],
                        "customProperty": [
                          {
                            "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                            "label": "آزمایش",
                            "type": "file"
                          },
                          {
                            "value": "8",
                            "label": "ساکارز",
                            "type": "number"
                          }
                        ],
                        "deletedAt": false,
                        "_id": "649070f8e3ab58f71dfa0a90",
                        "createdAt": "2023-06-19T15:15:04.923Z",
                        "updatedAt": "2023-06-19T15:15:04.923Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/:id/safe-delete": {
      "get": {
        "description": "Safe delete one products",
        "summary": "Safe delete",
        "tags": [
          "products"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/products/64803778cee36139e6931c9f/safe-delete' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/products/64803778cee36139e6931c9f/safe-delete',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "product id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "price": {
                          "type": "string"
                        },
                        "discount": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "productImagesSrc": {
                          "type": "array"
                        },
                        "additionalsImageSrc": {
                          "type": "array"
                        },
                        "customProperty": {
                          "type": "array"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "name": "ali",
                        "price": 12255,
                        "quantity": 222,
                        "code": "d20pgbv",
                        "admin": "63ec02f7cf392f67c0ad6f0c",
                        "category": "6468fc1a51c4a34f8138d14a",
                        "discount": 2212,
                        "productImagesSrc": [
                          "http://baseUrl/upload/product/457b8fe1-bf36-40e1-a9e9-9c4447bfa6e1.png"
                        ],
                        "additionalsImageSrc": [
                          "http://baseUrl/upload/product/a53d83ee-1f03-4be0-85c2-11c98fa88035.jpg",
                          "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg"
                        ],
                        "customProperty": [
                          {
                            "value": "http://baseUrl/upload/product/c1a56a3e-63fd-45ca-b304-e501a43b3a23.jpg",
                            "label": "آزمایش",
                            "type": "file"
                          },
                          {
                            "value": "8",
                            "label": "ساکارز",
                            "type": "number"
                          }
                        ],
                        "deletedAt": false,
                        "_id": "649070f8e3ab58f71dfa0a90",
                        "createdAt": "2023-06-19T15:15:04.923Z",
                        "updatedAt": "2023-06-19T15:15:04.923Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /admins/xxxxxxxxxxx"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/property": {
      "post": {
        "description": "Admin create new property",
        "summary": "create property",
        "tags": [
          "properties"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrl/property' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"label\": \"برگ آزمایش\",\n    \"type\": \"image\",\n    \"category\": [\"63d0dd161ac6abb10871a030\"]\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrl/property',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"label\": \"برگ آزمایش\",\n    \"type\": \"image\",\n    \"category\": [\n      \"63d0dd161ac6abb10871a030\"\n    ]\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "label",
                  "type"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "example": "وزن"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "file",
                      "text",
                      "number"
                    ],
                    "example": "number"
                  },
                  "unit": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "کیلوگرم",
                      "گرم",
                      "تن"
                    ]
                  },
                  "category": {
                    "type": "array",
                    "description": "list category for property",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "6468b16b801b654457284967"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "category": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "label": "1برگ آزمایش",
                        "type": "image",
                        "unit": [],
                        "category": [
                          "63d0dd161ac6abb10871a030"
                        ],
                        "_id": "64915d1c32a7b941c01e4683",
                        "createdAt": "2023-06-20T08:02:36.213Z",
                        "updatedAt": "2023-06-20T08:02:36.213Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "برچسب در سیستم وجود دارد"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Admin get all property",
        "summary": "get all property",
        "tags": [
          "properties"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/property' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsIn...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/property',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsIn...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "category": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "unit": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "number"
                          }
                        }
                      },
                      "example": [
                        {
                          "label": "برگ ",
                          "type": "image",
                          "unit": [],
                          "category": [
                            "63d0dd161ac6abb10871a030"
                          ],
                          "_id": "64915d1c32a7b941c01e4683",
                          "createdAt": "2023-06-20T08:02:36.213Z",
                          "updatedAt": "2023-06-20T08:02:36.213Z",
                          "__v": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/property/:id": {
      "delete": {
        "description": "delete one property by admin",
        "summary": "delete one property",
        "tags": [
          "properties"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request DELETE 'http://baseUrl/property/64915d1c32a7b941c01e4683' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'DELETE',\n  'url': 'http://baseUrl/property/64915d1c32a7b941c01e4683',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOi...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "property id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "category": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    },
                    "example": {
                      "label": "برگ ",
                      "type": "image",
                      "unit": [],
                      "category": [
                        "63d0dd161ac6abb10871a030"
                      ],
                      "_id": "64915d1c32a7b941c01e4683",
                      "createdAt": "2023-06-20T08:02:36.213Z",
                      "updatedAt": "2023-06-20T08:02:36.213Z",
                      "__v": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "get one property by admin",
        "summary": "get one property",
        "tags": [
          "properties"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/property/646fa6858bfe8d1617ab555b' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/property/646fa6858bfe8d1617ab555b',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "property id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "category": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      }
                    },
                    "example": {
                      "label": "برگ ",
                      "type": "image",
                      "unit": [],
                      "category": [
                        "63d0dd161ac6abb10871a030"
                      ],
                      "_id": "64915d1c32a7b941c01e4683",
                      "createdAt": "2023-06-20T08:02:36.213Z",
                      "updatedAt": "2023-06-20T08:02:36.213Z",
                      "__v": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شناسه به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/property:id": {
      "patch": {
        "description": "Admin update one property",
        "summary": "update property",
        "tags": [
          "properties"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/property/64915d1c32a7b941c01e4683' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIs...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"label\": \"وزن عسل\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/property/64915d1c32a7b941c01e4683',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIs...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"label\": \"وزن عسل\"\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "property id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "example": "وزن"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "file",
                      "text",
                      "number"
                    ],
                    "example": "number"
                  },
                  "unit": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "کیلوگرم",
                      "گرم",
                      "تن"
                    ]
                  },
                  "category": {
                    "type": "array",
                    "description": "list category for property",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "6468b16b801b654457284967"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "category": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unit": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "label": "برگ ",
                        "type": "image",
                        "unit": [],
                        "category": [
                          "63d0dd161ac6abb10871a030"
                        ],
                        "_id": "64915d1c32a7b941c01e4683",
                        "createdAt": "2023-06-20T08:02:36.213Z",
                        "updatedAt": "2023-06-20T08:02:36.213Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "برچسب در سیستم وجود دارد"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "description": "Signup user",
        "summary": "Signup user",
        "tags": [
          "users"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request POST 'http://baseUrl/users' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"phoneNumber\": \"09390870928\",\n    \"password\": \"!QAZ1qaz\",\n    \"passwordConfirm\": \"!QAZ1qaz\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'http://baseUrl/users',\n  'headers': {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"phoneNumber\": \"09390870928\",\n    \"password\": \"!QAZ1qaz\",\n    \"passwordConfirm\": \"!QAZ1qaz\"\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "phoneNumber",
                  "password",
                  "passwordConfirm"
                ],
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "example": "09394552776"
                  },
                  "password": {
                    "type": "string",
                    "example": "!QAZ1qaz"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "example": "!QAZ1qaz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "phoneNumber": "+989390870918",
                        "_id": "6490b21d23a1fac82a69c72a",
                        "createdAt": "2023-06-19T19:53:01.605Z",
                        "updatedAt": "2023-06-19T19:53:01.605Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "شماره موبایل در سیستم وجود دارد"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot Patch /invalid-adress"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all users by Admin",
        "summary": "Get users",
        "tags": [
          "users"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/users' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/users',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "phoneNumber": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "number"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "postalAddress": {
                                "type": "string"
                              },
                              "province": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "plaque": {
                                "type": "string"
                              },
                              "recipient": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  },
                                  "phoneNumber": {
                                    "type": "string"
                                  }
                                }
                              },
                              "postalCode": {
                                "type": "string"
                              }
                            }
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          }
                        }
                      },
                      "example": [
                        {
                          "_id": "64724cba6666c49e972a846c",
                          "phoneNumber": "+989394552776",
                          "createdAt": "2023-05-27T18:32:26.660Z",
                          "updatedAt": "2023-06-04T20:57:22.642Z",
                          "__v": 0,
                          "address": {
                            "postalAddress": "استان فارس - شهرستان فسا - بخش ششده و قره بلاغ-ا ",
                            "province": "البرز",
                            "city": "چهارباغ",
                            "plaque": "256",
                            "recipient": {
                              "firstName": "محمد",
                              "lastName": "عبدی",
                              "phoneNumber": "+989363658879"
                            },
                            "postalCode": "7466135566"
                          },
                          "firstName": "علی",
                          "lastName": "عبدی"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update user information by self",
        "summary": "Update user",
        "tags": [
          "users"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/users' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR..' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"name\": \"test\",\n    \"address\": {\n        \"city\": \"فسا\",\n        \"province\": \"فارس\",\n        \"plaque\": \"1\",\n        \"postalAddress\": \"sds sds sdss sdsd\",\n        \"selected\": true,\n        \"postalCode\": \"6553698556\",\n        \"recipient\": {\n            \"firstName\": \"محمد\",\n            \"lastName\": \"عبدی\",\n            \"phoneNumber\": \"09394502418\"\n        }\n    }\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/users',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR..',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"name\": \"test\",\n    \"address\": {\n      \"city\": \"فسا\",\n      \"province\": \"فارس\",\n      \"plaque\": \"1\",\n      \"postalAddress\": \"sds sds sdss sdsd\",\n      \"selected\": true,\n      \"postalCode\": \"6553698556\",\n      \"recipient\": {\n        \"firstName\": \"محمد\",\n        \"lastName\": \"عبدی\",\n        \"phoneNumber\": \"09394502418\"\n      }\n    }\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "postalAddress": {
                        "type": "string"
                      },
                      "province": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "plaque": {
                        "type": "string"
                      },
                      "recipient": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "phoneNumber": {
                            "type": "string"
                          }
                        }
                      },
                      "postalCode": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "postalAddress": {
                              "type": "string"
                            },
                            "province": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "plaque": {
                              "type": "string"
                            },
                            "recipient": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                },
                                "phoneNumber": {
                                  "type": "string"
                                }
                              }
                            },
                            "postalCode": {
                              "type": "string"
                            }
                          }
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        }
                      }
                    },
                    "example": [
                      {
                        "_id": "64724cba6666c49e972a846c"
                      },
                      {
                        "phoneNumber": "+989394552776"
                      },
                      {
                        "createdAt": "2023-05-27T18:32:26.660Z"
                      },
                      {
                        "updatedAt": "2023-06-04T20:57:22.642Z"
                      },
                      {
                        "__v": 0
                      },
                      {
                        "address": {
                          "postalAddress": "استان فارس - شهرستان فسا - بخش ششده و قره بلاا عبدی",
                          "province": "البرز",
                          "city": "چهارباغ",
                          "plaque": "256",
                          "recipient": {
                            "firstName": "محمد",
                            "lastName": "عبدی",
                            "phoneNumber": "+989363658879"
                          },
                          "postalCode": "7466135566"
                        }
                      },
                      {
                        "firstName": "علی"
                      },
                      {
                        "lastName": "عبدی"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "نام به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/:id": {
      "delete": {
        "description": "Delete user by admin",
        "summary": "Delete user",
        "tags": [
          "users"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request DELETE 'http://baseUrl/users/6490b21d23a1fac82a69c72a' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUz...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'DELETE',\n  'url': 'http://baseUrl/users/6490b21d23a1fac82a69c72a',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUz...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "_id": "6490b21d23a1fac82a69c72a",
                        "phoneNumber": "+989390870918",
                        "createdAt": "2023-06-19T19:53:01.605Z",
                        "updatedAt": "2023-06-19T19:53:01.605Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "آیدی به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "description": "Get user information by self",
        "summary": "Get user",
        "tags": [
          "users"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'http://baseUrl/users/info' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI...'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'http://baseUrl/users/info',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI...'\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "number"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "postalAddress": {
                              "type": "string"
                            },
                            "province": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "plaque": {
                              "type": "string"
                            },
                            "recipient": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                },
                                "phoneNumber": {
                                  "type": "string"
                                }
                              }
                            },
                            "postalCode": {
                              "type": "string"
                            }
                          }
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "_id": "64724cba6666c49e972a846c",
                        "phoneNumber": "+989394552776",
                        "createdAt": "2023-05-27T18:32:26.660Z",
                        "updatedAt": "2023-06-04T20:57:22.642Z",
                        "__v": 0,
                        "address": {
                          "postalAddress": "استان فارس - شهرستان فسا - بخش ششده و قره بلاا عبدی",
                          "province": "البرز",
                          "city": "چهارباغ",
                          "plaque": "256",
                          "recipient": {
                            "firstName": "محمد",
                            "lastName": "عبدی",
                            "phoneNumber": "+989363658879"
                          },
                          "postalCode": "7466135566"
                        },
                        "firstName": "علی",
                        "lastName": "عبدی"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/password": {
      "patch": {
        "description": "Update user password by self",
        "summary": "Update user password",
        "tags": [
          "users"
        ],
        "servers": [
          {
            "url": "http://baseUrl"
          }
        ],
        "x-code-samples": [
          {
            "lang": "cURL",
            "source": "curl --location --request PATCH 'http://baseUrl/users/password' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1Ni...' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"password\": \"!QAZ1qaz\",\n    \"newPassword\": \"!QAZ1qaz\",\n    \"newPasswordConfirm\": \"!QAZ1qaz\"\n}'\n"
          },
          {
            "lang": "node.js",
            "source": "var request = require('request');\nvar options = {\n  'method': 'PATCH',\n  'url': 'http://baseUrl/users/password',\n  'headers': {\n    'Authorization': 'Bearer eyJhbGciOiJIUzI1Ni...',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"password\": \"!QAZ1qaz\",\n    \"newPassword\": \"!QAZ1qaz\",\n    \"newPasswordConfirm\": \"!QAZ1qaz\"\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
          }
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "header",
            "description": "an authorization header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "newPassword",
                  "newPasswordConfirm"
                ],
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  },
                  "newPasswordConfirm": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "درخواست انجام شد"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "پسورد به درستی وارد نشده است"
                      ]
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden resource"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 403
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot GET /invalid-address"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internet Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "statusCode": {
                      "type": "string",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "responses": {},
  "parameters": {},
  "tags": []
}