paths:
  /property:
    get:
      description: Admin get all property
      summary: get all property
      tags:
        - properties
      servers:
        - url: http://baseUrl
      x-code-samples:
        - lang: cURL
          source: |
            curl --location --request GET 'http://baseUrl/property' \
            --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsIn...'
        - lang: node.js
          source: |
            var request = require('request');
            var options = {
              'method': 'GET',
              'url': 'http://baseUrl/property',
              'headers': {
                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsIn...'
              }
            };
            request(options, function (error, response) {
              if (error) throw new Error(error);
              console.log(response.body);
            });

      parameters:
        - name: auth
          in: header
          description: an authorization header
          required: true
          type: string

      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "درخواست انجام شد"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        label:
                          type: string
                        type:
                          type: string
                        category: 
                          type: array
                          items:
                            type: string
                        unit: 
                          type: array
                          items:
                            type: string
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                        __v: 
                          type: number
                    example: [{
                        "label": "برگ ",
                        "type": "image",
                        "unit": [],
                        "category": [
                            "63d0dd161ac6abb10871a030"
                        ],
                        "_id": "64915d1c32a7b941c01e4683",
                        "createdAt": "2023-06-20T08:02:36.213Z",
                        "updatedAt": "2023-06-20T08:02:36.213Z",
                        "__v": 0
                    }]

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
                  statusCode: 
                    type: string
                    example: 401
        
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden resource"
                  statusCode: 
                    type: string
                    example: 403

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Cannot Patch /invalid-address"
                  statusCode: 
                    type: string
                    example: 404
        "500":
          description: Internet Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
                  statusCode: 
                    type: string
                    example: 500

