paths:
  /users/password:
    patch:
      description: Update user password by self
      summary: Update user password
      tags:
        - users
      servers:
        - url: http://baseUrl
      x-code-samples:
        - lang: cURL
          source: |
            curl --location --request PATCH 'http://baseUrl/users/password' \
            --header 'Authorization: Bearer eyJhbGciOiJIUzI1Ni...' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "password": "!QAZ1qaz",
                "newPassword": "!QAZ1qaz",
                "newPasswordConfirm": "!QAZ1qaz"
            }'
        - lang: node.js
          source: |
            var request = require('request');
            var options = {
              'method': 'PATCH',
              'url': 'http://baseUrl/users/password',
              'headers': {
                'Authorization': 'Bearer eyJhbGciOiJIUzI1Ni...',
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                "password": "!QAZ1qaz",
                "newPassword": "!QAZ1qaz",
                "newPasswordConfirm": "!QAZ1qaz"
              })

            };
            request(options, function (error, response) {
              if (error) throw new Error(error);
              console.log(response.body);
            });

      parameters:
        - name: auth
          in: header
          description: an authorization header
          required: true
          type: string

      requestBody:
        content:
          application/json:
            schema: 
              type: object
              required:
                  - password
                  - newPassword
                  - newPasswordConfirm
              properties:
                password: 
                  type: string
                newPassword: 
                  type: string
                newPasswordConfirm:
                  type: string
          
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "درخواست انجام شد"
                  
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                    example: [
                      "پسورد به درستی وارد نشده است"
                    ]
                  statusCode: 
                    type: string
                    example: 400
                  error:
                    type: string
                    example: bad request

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
                  statusCode: 
                    type: string
                    example: 401
        
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden resource"
                  statusCode: 
                    type: string
                    example: 403

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Cannot GET /invalid-address"
                  statusCode: 
                    type: string
                    example: 404

        "500":
          description: Internet Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
                  statusCode: 
                    type: string
                    example: 500

