paths:
  /carts/products/:id:
    patch:
      description: User update cart
      summary: User update cart
      tags:
        - carts
      servers:
        - url: http://baseUrl
      x-code-samples:
        - lang: cURL
          source: |
            curl --location --request PATCH 'http://lbaseUrl/carts/products/64704cd2b24eac4599451066' \
            --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiI...' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "product": {
                    "quantity": 65
                }
            }'
        - lang: node.js
          source: |
            var request = require('request');
            var options = {
              'method': 'PATCH',
              'url': 'http://lbaseUrl/carts/products/64704cd2b24eac4599451066',
              'headers': {
                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiI...',
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                "product": {
                  "quantity": 65
                }
              })

            };
            request(options, function (error, response) {
              if (error) throw new Error(error);
              console.log(response.body);
            });

      parameters:
        - name: id
          in: path
          description: product id
          required: true
          type: string

        - name: auth
          in: header
          description: an authorization header
          required: true
          type: string

      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                quantity:
                  type: intiger
                  example: 20
                _id:
                  type: string
                  example: "6468b16b801b654457284967"

      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "درخواست انجام شد"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      user:
                        type: string
                        # description: user id
                      products: 
                        type: array
                        items: 
                          type: obejct
                          properties:
                            quantity:
                              type: intiger
                            product:
                              type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      __v: 
                        type: intiger
                    example:  {
                      "_id": "648b01eaa1aeb17a2a89d64f",
                      "user": "64724cba6666c49e972a846c",
                      "__v": 0,
                      "createdAt": "2023-06-15T12:19:54.642Z",
                      "products": [
                        {
                          "quantity": 65,
                          "product": "64704cd2b24eac4599451066"
                        }
                      ],
                      "updatedAt": "2023-06-20T06:39:08.831Z"
                    }
                    
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                    example: [
                      "شناسه به درستی وارد نشده است",
                    ]
                  statusCode: 
                    type: string
                    example: 400
                  error:
                    type: string
                    example: bad request

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
                  statusCode: 
                    type: string
                    example: 401
        
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden resource"
                  statusCode: 
                    type: string
                    example: 403

        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Cannot Patch /invalid-address"
                  statusCode: 
                    type: string
                    example: 404
        "500":
          description: Internet Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
                  statusCode: 
                    type: string
                    example: 500

