paths:
  /checkout/payment:
    get:
      description: User get link for payment
      summary: Payemnt
      tags:
        - payment
      servers:
        - url: http://baseUrl
      x-code-samples:
        - lang: cURL
          source: |
            curl --location --request GET 'http://lbaseUrl/checkout/payment' \
            --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5...'
        - lang: node.js
          source: |
            var request = require('request');
            var options = {
              'method': 'GET',
              'url': 'http://lbaseUrl/checkout/payment',
              'headers': {
                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5...'
              }
            };
            request(options, function (error, response) {
              if (error) throw new Error(error);
              console.log(response.body);
            });

      parameters:
        - name: auth
          in: header
          description: an authorization header
          required: true
          type: string

      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "درخواست انجام شد"
                  data:
                    type: object
                    properties:
                      transactionLink:
                        type: string
                    example: {
                        "transactionLink": "https://idpay.ir/p/ws-sandbox/58c4166141563d84363678e011043e69"
                    }
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                    example: [
                      "آدرس گیرنده الزامی است"
                    ]
                  statusCode: 
                    type: string
                    example: 400
                  error:
                    type: string
                    example: bad request

        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
                  statusCode: 
                    type: string
                    example: 401
        
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden resource"
                  statusCode: 
                    type: string
                    example: 403
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Not Found"
                  message:
                    type: string
                    example: "Cannot GET /admins/xxxxxxxxxxx"
                  statusCode: 
                    type: string
                    example: 404

        "500":
          description: Internet Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
                  statusCode: 
                    type: string
                    example: 500

